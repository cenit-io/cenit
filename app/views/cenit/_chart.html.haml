- controller ||= nil
- @acumulate = params[:acumulate] || 'beginning_of_month'
- @data_field = (params[:data_field] || :created_at).to_sym
- @chart = params[:chart] || 'column_chart'
- @calculation = params[:calculation] || 'sum'

- acumulate_types = {'daily' => 'beginning_of_day', 'weekly' => 'beginning_of_week', 'monthly' => 'beginning_of_month', 'quarterly' => 'beginning_of_quarter','yearly' => 'beginning_of_year', 'week days' => 'wday', 'hours' => 'hour' }
- calculation_types = {'count' => :count, 'max' => :max, 'min' => :min,'sum' => 'sum'}

- calculation_types['mean'] = :mean            if Array.method_defined? :mean
- calculation_types['median'] = :median        if Array.method_defined? :median
- calculation_types['mode'] = :mode            if Array.method_defined? :mode
- calculation_types['variance'] = :variance    if Array.method_defined? :variance

- chart_types = {'line chart' => 'line_chart','column chart' => 'column_chart', 'area chart' => :area_chart, 'bar chart' => :bar_chart, 'pie chart' => :pie_chart}

- data_fields = []
- numeric_fields = []

- if @filterable_fields.present?
  - @filterable_fields.each do |field|
    - if ( field.type == :float || field.type == :integer || field.type == :decimal) && field.name != :id
      - @met = params[:met] || field.name
      - numeric_fields << field.name
    - elsif field.type == :date || field.type == :datetime
      - data_fields << field
- if @met
  - params[:all] = true
  - execution = Setup::ChartRendering.process(met: @met, data_type_id: data_type.id, selector: controller.list_entries.selector, data_field: @data_field, calculation: @calculation, acumulate: @acumulate )
  - cenit_host = Cenit.homepage
  - request_interval = Cenit.chart_data_request_interval
  - execution_id = execution.id
  - element_id = 'chart-1'
  .button{class: 'btn btn-primary pull-right hide', id: 'show_graphics'}
    %i{class: 'fa fa-bar-chart'}
    %span{}
      = t('admin.misc.chart.hide')
  .g-container
    .g-controls.hide
      = form_tag(index_path(params.except(*%w[page f query])), method: :get, id: 'graphics-form', class: "pjax-form form-inline") do
        = hidden_field_tag 'graphic_request', true
        .graphics-area
          .graphics-controls
            %label= t('admin.charts.axisa_label')
            %select.input-sm.form-control{name: :data_field }
              - data_fields.each do |f|
                - if @data_field == f.name
                  %option{selected: 'selected', value: f.name }
                    = f.label
                - else
                  %option{value: f.name }
                    = f.label
            %label= t('admin.charts.axisa_field_label')
            = select_tag :met, options_for_select( numeric_fields, @met ), class: 'input-sm form-control'
            = select_tag :acumulate, options_for_select( acumulate_types, @acumulate ), class: 'input-sm form-control'
            = select_tag :calculation, options_for_select( calculation_types, @calculation ), class: 'input-sm form-control'
            = select_tag :chart, options_for_select( chart_types, @chart ), class: 'input-sm form-control'
    .new_g.text-center
%script
  jQuery(function($) {
  drawGraphics({host:"#{raw cenit_host}", exec_id:"#{raw execution_id}", graphic_type: "#{raw @chart}", element_id: "#{raw element_id}", request_interval: "#{raw request_interval}"});
  });

