
:ruby
  model_fields = []
  if data_type = @_controller.instance_variable_get(:@_data_type)
    (model = data_type.create_mongoff_model).simple_properties_schemas.each do |property, schema|
      model_fields << [schema['title'] || property.titleize, property, (enum = schema['enum']) || [], enum ? 'enum' : model.type_symbol_for(schema).first]
    end
  end
  model_fields = model_fields.to_json
  if (triggers = field.form_value).blank?
    triggers = '{}'
  end
  puts "MODEL FIELD MAP #{model_fields}"
  puts "TRIGGERS #{triggers}"
  update_field = "#{model_name = @abstract_model.to_s.parameterize.underscore}_#{@_controller.instance_variable_get(:@_update_field)}"

.a{style: 'float:left'}
  %input{style: 'display: none', name: "#{model_name}[#{field.name}][_]"}
  .b
    %span#triggers_box
  .c
    %li.dropdown{style: 'list-style-type: none'}
      %a.dropdown-toggle{href: '#', :'data-toggle' => 'dropdown'}
        .btn.btn-info{id: 'add_trigger'}
          .i{class: 'icon-white icon-plus'}
          = 'Add'  #t('admin.misc.add_filter')
          %b.caret
      %ul.dropdown-menu#triggers

%script
  var model_name = '#{model_name}'
  var model_field_name = '#{field.name}'
  var update_field = '#{update_field}'
  var fields = #{model_fields.html_safe}
  var default_triggers = #{triggers.html_safe}
  $("##{update_field}").trigger('change');

